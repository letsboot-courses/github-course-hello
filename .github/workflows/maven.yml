# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-maven

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Java CI with Maven

on:
  push:
    branches:
      - main
    paths-ignore:
      - 'README.md'
  workflow_dispatch:
    inputs:
      debug:
        description: Enable debug output
        required: false
        type: boolean
        default: false

permissions:
  contents: read
  actions: read
  checks: write
  packages: write

jobs:
  # build:

  #   name: Build with Maven
  #   runs-on: ubuntu-22.04

  #   steps:
  #   - uses: actions/checkout@v4
  #   - name: Set up JDK ${{ vars.JAVA_VERSION}}
  #     uses: actions/setup-java@v4
  #     with:
  #       java-version: ${{ vars.JAVA_VERSION}}
  #       distribution: 'temurin'
  #       cache: maven
  #   - name: Build with Maven
  #     run: mvn -B package --file pom.xml
  #   - name: Print current user
  #     if: ${{ inputs.debug == true }}
  #     run: |
  #       echo "current user is: ${{ github.actor }}"
  #   - name: Display test results
  #     uses: dorny/test-reporter@v1
  #     if: always()
  #     with:
  #       name: JUnit Test Results
  #       path: target/surefire-reports/*.xml
  #       reporter: java-junit  
  #   - name: Save artifact
  #     uses: actions/upload-artifact@v4
  #     with:
  #       name: hello-app
  #       path: target/*.jar
  #       retention-days: 2

  # test:

  #   strategy:
  #     matrix:
  #       version: [18, 20, 22]
    
  #   name: Test with Cypress and Node ${{ matrix.version }}
  #   runs-on: ubuntu-22.04
  #   needs: build

  #   steps:
  #   - uses: actions/checkout@v4
  #   - name: Set up JDK ${{ vars.JAVA_VERSION}}
  #     uses: actions/setup-java@v4
  #     with:
  #       java-version: ${{ vars.JAVA_VERSION}}
  #       distribution: 'temurin'
  #       cache: maven
  #   - name: Spring Boot Backend starten
  #     run: mvn spring-boot:run &
  #   - name: Set up Node ${{ matrix.version }}
  #     uses: actions/setup-node@v4
  #     with:
  #       node-version: ${{ matrix.version }}
  #   - name: Cypress run
  #     uses: cypress-io/github-action@v6
  #   - name: Publish Cypress Test Results
  #     uses: dorny/test-reporter@v1
  #     if: always()
  #     with:
  #       name: Cypress Test Results (Node ${{ matrix.version }})
  #       path: cypress/results/junit/*.xml
  #       reporter: java-junit

  publish:

    name: Publish to GitHub Packages
    # needs: test
    runs-on: ubuntu-22.04

    steps:
    - uses: actions/checkout@v4
    - name: Set up JDK ${{ vars.JAVA_VERSION}}
      uses: actions/setup-java@v4
      with:
        java-version: ${{ vars.JAVA_VERSION}}
        distribution: 'temurin'
        cache: maven
        # server-id: github
        # server-username: ${{ github.actor }}
        # server-username: letsboot-courses
        # server-password: ${{ secrets.GH_PACKAGES_TOKEN }}
        # server-password: ${{ secrets.GITHUB_TOKEN }}
    - name: Deploy with Maven
      run: mvn -B deploy --file pom.xml